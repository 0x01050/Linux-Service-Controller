{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/dashboardReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/layout/Landing.js","components/auth/Login.js","components/private-route/PrivateRoute.js","services/dashboardRequest.js","components/dashboard/ServiceController.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","dashboard","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Landing","react_default","a","createElement","style","height","className","fontFamily","Link","to","width","borderRadius","letterSpacing","Component","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","userData","password","props","loginUser","history","push","nextProps","marginTop","paddingLeft","noValidate","error","classnames","invalid","usernotfound","htmlFor","passwordincorrect","connect","post","then","res","data","setItem","jwt_decode","catch","err","response","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","getStatus","serviceName","connection","alert","console","log","startService","stopService","restartService","ServiceController","onStatusClick","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","dashboardRequests","ret","status","service","stop","_x","onStartClick","_ref2","_callee2","_context2","success","_x2","onStopClick","_ref3","_callee3","_context3","_x3","onRestartClick","_ref4","_callee4","_context4","_x4","friendlyName","bind","assertThisInitialized","_this2","intervalID","setInterval","_callee5","_context5","sent","clearInterval","_this$state","Fragment","Grid","item","md","sm","xs","src","alt","Typography","fontSize","color","gutterBottom","Box","mx","mt","Button","onClick","variant","margin","pt","backgroundColor","withStyles","theme","root","& > *","spacing","Dashboard","onLogoutClick","services","classes","paddingTop","display","justifyContent","mb","container","justify","map","index","react","key","dashboard_ServiceController","Divider","jwtToken","currentTime","Date","now","exp","location","href","App","es","BrowserRouter","exact","path","Switch","private_route_PrivateRoute","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88776cbb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport dashboardReducer from \"./dashboardReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  dashboard : dashboardReducer,\r\n  errors: errorReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\r\n      compose\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 center-align\">\r\n            <h4>\r\n              <b>Build</b> a login/auth app with the{\" \"}\r\n              <span style={{ fontFamily: \"monospace\" }}>MERN</span> stack from\r\n              scratch\r\n            </h4>\r\n            <p className=\"flow-text grey-text text-darken-1\">\r\n              Create a (minimal) full-stack app with user authentication via\r\n              passport and JWTs\r\n            </p>\r\n            <br />\r\n            <div className=\"col s6\">\r\n              <Link\r\n                to=\"/register\"\r\n                style={{\r\n                  width: \"140px\",\r\n                  borderRadius: \"3px\",\r\n                  letterSpacing: \"1.5px\"\r\n                }}\r\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n              >\r\n                Register\r\n              </Link>\r\n            </div>\r\n            <div className=\"col s6\">\r\n              <Link\r\n                to=\"/login\"\r\n                style={{\r\n                  width: \"140px\",\r\n                  borderRadius: \"3px\",\r\n                  letterSpacing: \"1.5px\"\r\n                }}\r\n                className=\"btn btn-large btn-flat waves-effect white black-text\"\r\n              >\r\n                Log In\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      user: this.state.user,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.loginUser(userData);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Login</b> below\r\n              </h4>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.user}\r\n                  error={errors.user}\r\n                  id=\"user\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.user || errors.usernotfound\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">User</label>\r\n                <span className=\"red-text\">\r\n                  {errors.user}\r\n                  {errors.usernotfound}\r\n                </span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password || errors.passwordincorrect\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <span className=\"red-text\">\r\n                  {errors.password}\r\n                  {errors.passwordincorrect}\r\n                </span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import axios from \"axios\";\r\n\r\nexport const getServices = () => {\r\n  return axios\r\n    .post(\"/api/dashboard/services\")\r\n    .then((res) => {\r\n      return {\r\n        data : res.data,\r\n        connection : true, \r\n      };\r\n      // Set token to localStorage\r\n    })\r\n    .catch(err =>{\r\n      window.alert(\"Node.js server Error\");\r\n        console.log(err);\r\n        return {data : err, connection : false};\r\n    }\r\n    );\r\n};\r\n\r\nexport const getStatus = (serviceName) => {\r\n    return axios\r\n      .post(\"/api/dashboard/status\", {serviceName})\r\n      .then((res) => {\r\n        return {\r\n          data : res.data,\r\n          connection : true, \r\n        };\r\n        // Set token to localStorage\r\n      })\r\n      .catch(err =>{\r\n        window.alert(\"Node.js server Error\");\r\n          console.log(err);\r\n          return {data : err, connection : false};\r\n      }\r\n      );\r\n  };\r\n  \r\n  export const startService = (serviceName) => {\r\n    return axios\r\n      .post(\"/api/dashboard/start\", {serviceName})\r\n      .then(res => {\r\n        return {\r\n          data : res.data,\r\n          connection : true, \r\n        };\r\n      })\r\n      .catch(err =>{\r\n        window.alert(\"Node.js server Error\");\r\n        return {data : err, connection : false};\r\n      }\r\n      );\r\n  };\r\n  \r\n  export const stopService = (serviceName) => {\r\n    return axios\r\n      .post(\"/api/dashboard/stop\", {serviceName})\r\n      .then(res => {\r\n        return {\r\n          data : res.data,\r\n          connection : true, \r\n        };\r\n      })\r\n      .catch(err =>{\r\n        window.alert(\"Node.js server Error\");\r\n        return {data : err, connection : false};\r\n      }\r\n      );\r\n  };\r\n  \r\n  export const restartService = (serviceName) => {\r\n    return axios\r\n      .post(\"/api/dashboard/restart\", serviceName)\r\n      .then(res => {\r\n        return {\r\n          data : res.data,\r\n          connection : true, \r\n        };\r\n      })\r\n      .catch(err =>{\r\n        window.alert(\"Node.js server Error\");\r\n        return {data : err, connection : false};\r\n      }\r\n      );\r\n  };\r\n  \r\n  ","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport * as dashboardRequests from '../../services/dashboardRequest';\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  withStyles\r\n} from '@material-ui/core';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n});\r\n\r\nclass ServiceController extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      status: false,\r\n      serviceName: '',\r\n      friendlyName: '',\r\n\r\n    };\r\n    this.onStatusClick = this.onStatusClick.bind(this);\r\n    this.onStartClick = this.onStartClick.bind(this);\r\n    this.onStopClick = this.onStopClick.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { serviceName, friendlyName } = this.props;\r\n\r\n    dashboardRequests.getStatus(serviceName)\r\n      .then((ret) => {\r\n        if (ret.connection) {\r\n          const status = (ret.data.status === 'on');\r\n          this.setState({ serviceName, friendlyName, status });\r\n        } else {\r\n          this.setState({ serviceName, friendlyName });\r\n        }\r\n      });\r\n    try {\r\n      this.intervalID = setInterval(async () => {\r\n        const ret = await dashboardRequests.getStatus(serviceName);\r\n        if (ret.connection) {\r\n          const status = (ret.data.status === 'on');\r\n          if (status !== this.state.status) this.setState({ status });\r\n        } else {\r\n          clearInterval(this.intervalID);\r\n        }\r\n      }, 3000);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalID);\r\n  }\r\n\r\n  onStatusClick = async (e) => {\r\n    e.preventDefault();\r\n    const { serviceName } = this.state;\r\n    dashboardRequests.getStatus(serviceName)\r\n      .then((ret) => {\r\n        if (ret.connection) {\r\n          const status = (ret.data.status === 'on');\r\n          this.setState({ service: ret.data.serviceName, status });\r\n        }\r\n      });\r\n  }\r\n\r\n  onStartClick = async (e) => {\r\n    e.preventDefault();\r\n    // this.setState({status : true});\r\n    const { serviceName } = this.state;\r\n    dashboardRequests.startService(serviceName)\r\n      .then((ret) => {\r\n        if (ret.connection) {\r\n          const { success } = ret.data;\r\n          if (!success) window.alert('Service start failed!');\r\n          else {\r\n            this.setState({ status: true });\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onStopClick = async (e) => {\r\n    e.preventDefault();\r\n    // this.setState({status : false});\r\n    const { serviceName } = this.state;\r\n    dashboardRequests.stopService(serviceName)\r\n      .then((ret) => {\r\n        if (ret.connection) {\r\n          const { success } = ret.data;\r\n          if (!success) window.alert('Service stop failed!');\r\n          else {\r\n            this.setState({ status: false });\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onRestartClick = async (e) => {\r\n    e.preventDefault();\r\n    // this.setState({status : true});\r\n    const { serviceName } = this.state;\r\n    dashboardRequests.restartService(serviceName)\r\n      .then((ret) => {\r\n        if (ret.connection) {\r\n          const { success } = ret.data;\r\n          if (!success) window.alert('Service restart failed!');\r\n          else {\r\n            this.setState({ status: true });\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    // const { user } = this.props.auth;\r\n    const { status, friendlyName } = this.state;\r\n\r\n    return (\r\n      <>\r\n          <Grid\r\n            item\r\n            md={2}\r\n            sm={2}\r\n            xs={4}\r\n          >\r\n            {\r\n            status\r\n              ? (\r\n                <img\r\n                  src=\"/on.jpg\"\r\n                  height={40}\r\n                  style={{\r\n                    marginTop: '15px'\r\n                  }}\r\n                  alt=\"on status\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src=\"/off.jpg\"\r\n                  height={40}\r\n                  style={{\r\n                    marginTop: '15px'\r\n                  }}\r\n                  alt=\"off status\"\r\n                />\r\n              )\r\n          }\r\n          </Grid>\r\n          <Grid\r\n            md={2}\r\n            sm={2}\r\n            xs={8}\r\n            item\r\n          >\r\n\r\n            <Typography \r\n              style={{\r\n                marginTop: '20px',\r\n                fontSize : 'large'\r\n              }}\r\n              color=\"textSecondary\"\r\n              gutterBottom>\r\n              {friendlyName}\r\n            </Typography>\r\n\r\n          </Grid>\r\n          <Grid\r\n            md={8}\r\n            sm={8}\r\n            xs={12}\r\n            item\r\n          >\r\n            <Box mx=\"auto\" mt={0}>\r\n              <Button\r\n                onClick={this.onStartClick}\r\n                variant=\"contained\"\r\n                mt={1}\r\n                style={{\r\n                  margin: '15px'\r\n                }}\r\n                color=\"primary\"\r\n              >\r\n                Start\r\n              </Button>\r\n              <Button\r\n                onClick={this.onStopClick}\r\n                variant=\"contained\"\r\n                style={{\r\n                  margin: '15px'\r\n                }}\r\n                pt={4}\r\n                color=\"secondary\"\r\n              >\r\n                Stop\r\n              </Button>\r\n              <Button\r\n                onClick={this.onRestartClick}\r\n                variant=\"contained\"\r\n                pt={1}\r\n                style={{\r\n                  backgroundColor: 'green',\r\n                  color: 'white',\r\n                  margin: '15px'\r\n                }}\r\n              >\r\n                Restart\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nServiceController.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(withStyles(styles)(ServiceController));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport * as dashboardRequests from '../../services/dashboardRequest';\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Divider,\r\n  withStyles\r\n} from '@material-ui/core';\r\nimport ServiceController from \"./ServiceController\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n});\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      status: false,\r\n      services: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount(){\r\n\r\n    dashboardRequests.getServices()\r\n    .then((ret)=>{\r\n      if(ret.connection)\r\n      {\r\n        const services = ret.data.services;\r\n        this.setState({services});\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.intervalID);\r\n  }\r\n\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n\r\n  render() {\r\n    // const { user } = this.props.auth;\r\n    const {services} = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <div\r\n        style={{paddingTop : '75px'}}\r\n        className=\"container\">\r\n\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          mb={0}\r\n          className={classes.root}\r\n        >\r\n          <Grid\r\n            container\r\n            justify=\"space-between\"\r\n            spacing={0}\r\n          >\r\n            {\r\n              services.map((service, index)=>(\r\n                <Fragment\r\n                  key={index}\r\n                >\r\n                <ServiceController\r\n                  \r\n                  serviceName={service.serviceName}\r\n                  friendlyName={service.friendlyName}\r\n                  />\r\n                <Grid\r\n                  md={12}\r\n                  sm={12}\r\n                  xs={12}\r\n                  item\r\n                >\r\n                  <Divider />\r\n                </Grid>\r\n              </Fragment>\r\n              ))\r\n\r\n            }\r\n          </Grid>\r\n        </Box>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"landing-copy col s12 center-align\">\r\n            <button\r\n              style={{\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\",\r\n              }}\r\n              onClick={this.onLogoutClick}\r\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(withStyles(styles)(Dashboard));\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\n\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport Landing from \"./components/layout/Landing\";\r\nimport Login from \"./components/auth/Login\";\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\n\r\nimport \"./App.css\";\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Route exact path=\"/landing\" component={Landing} />\r\n            <Route exact path=\"/\" component={Login} />\r\n            <Switch>\r\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}